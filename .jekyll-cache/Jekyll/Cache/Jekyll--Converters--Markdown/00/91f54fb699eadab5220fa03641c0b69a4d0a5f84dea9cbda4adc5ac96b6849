I"÷<p>C++ STL or the Standard Template Library is one of the most important tools in a C++ programmerâ€™s arsenal. The <a href="http://stepanovpapers.com/STL/DOC.PDF">STL proposal</a> by Alexander Stepanov and Meg Lee is dated October 31, 1995 and became an important part of the first ISO C++ standard or C++98 as it is referred to nowadays. David Musser and Alexander Stepanov had already written about <a href="http://stepanovpapers.com/genprog.pdf">Generic Programming</a> in Ada and STL was developed along similar
ideas. Given the popularity of object oriented (OO) paradigm in the 90s, it is a bit surprising that STL (which was implemented in the 90s) is not OO at all and is based on generic programming with smaller components that are meant to be composed and used with templates for compile-time polymorphism rather than the typical run-time polymorphism common with OO paradigm. However, this is in line with the idea that C++ is supposed to be used as a multi-paradigm language. Anyone who says that OO or
functional or generic programming is a silver bullet and will solve all the problems has just not seen enough problems. This flexibility of C++ is one of the key reasons that makes it such a popular language (backward compatibility being the other).</p>
:ET